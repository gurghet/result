name: Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version'
        required: true
      developmentVersion:
        description: 'Next development version'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Maven Toolchains
        run: |
          cat << EOF > ~/.m2/toolchains.xml
          <?xml version="1.0" encoding="UTF8"?>
          <toolchains>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>11</version>
              </provides>
              <configuration>
                <jdkHome>${JAVA_HOME_11_X64}</jdkHome>
              </configuration>
            </toolchain>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>17</version>
              </provides>
              <configuration>
                <jdkHome>${JAVA_HOME_17_X64}</jdkHome>
              </configuration>
            </toolchain>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>21</version>
              </provides>
              <configuration>
                <jdkHome>${JAVA_HOME_21_X64}</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOF
      - name: Configure Git
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      - name: Setup Maven settings.xml
        run: |
          mkdir -p ~/.m2
          echo "${{ secrets.SETTINGS_XML }}" > ~/.m2/settings.xml
      - name: Verify settings.xml
        run: |
          if [ ! -f ~/.m2/settings.xml ]; then
            echo "settings.xml was not created"
            exit 1
          fi
      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - name: Prepare Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -B -s ~/.m2/settings.xml release:prepare \
          -DreleaseVersion=${{ github.event.inputs.releaseVersion }} \
          -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }} \
          -DskipTests
      - name: Push Release Changes
        run: |
          git push
          git push --tags
      - name: Perform Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -B -s ~/.m2/settings.xml release:perform \
          -DskipTests
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ github.event.inputs.releaseVersion }} \
            --title "Release ${{ github.event.inputs.releaseVersion }}" \
            --notes "Release ${{ github.event.inputs.releaseVersion }}" \
            --target ${{ github.ref }}